

============================================================
소스.cpp, 저장시간: 05/16/23 Tuesday 18:51:17 
============================================================
//--------------------------------------------------------------------
// 2023년 1학기 STL 3월 2일 목78		화910 목78		(11주 2일)
//--------------------------------------------------------------------
// Assoiciative container - Set/Map
// Set은 'equivalence(동등성) 관계'를 사용하여 'uniqueness를 결정'한다.
// 
// 중요한 것은 정렬 순서를 컨테이너에게 알려줘야 한다.
// 1. Default가 std::less<String> -> 코드 속에서 operator<를 불러
//		-> String에 operator<를 정의하면 된다.
// 2. struct std::less를 less<String>으로 특수화 한다.
// 3. 사용자가 정렬방법을 함수객체로 지정
//--------------------------------------------------------------------
#include <iostream>
#include <set>
#include <fstream>

#include "String.h"
#include "save.h"

using namespace std;
extern bool 관찰;

//-----------
int main()
//-----------
{
	ifstream in{ "이상한 나라의 앨리스.txt" };							// set - 2'948, multiset - 26'626
	set<String> s{ istream_iterator<String>{in}, {} };				// 중복 불가
	//multiset<String> s{ istream_iterator<String>{in}, {} };		// 중복 가능

	for (const String& s : s)
		cout << s << endl;

	cout << "읽은 단어 수 - " << s.size() << endl;

	// [문제] 단어를 입력받아 있다면 몇 번째 단어인지 출력하라
	//save("String.h");
	//save("String.cpp");
	save("소스.cpp");

	while (true) {
		cout << "단어?: ";
		String word;
		cin >> word;

		auto it = s.find(word);
		if (it != s.end())
			cout << distance(s.begin(), it) + 1 << "번째에 있습니다." << endl;
		else
			cout << "없습니다." << endl;
	}
}