

============================================================
소스.cpp, 저장시간: 03/14/23 Tuesday 18:15:40 
============================================================
//--------------------------------------------------------------------
// 2023년 1학기 STL 3월 2일 목78		화910 목78		(2주 2일)
// -------------------------------------------------------------------
// cmd창 맨위 우클릭->속성->레이아웃->창 크기 너비 80
//--------------------------------------------------------------------
// 많은 수의 자료형 다루기 - int
// int를 파일에 저장하려면 몇 바이트가 필요한가? - 글자로 쓴다면 +6 bytes
//--------------------------------------------------------------------

#include <iostream>
#include <array>
#include <format>
#include <numeric>
#include <fstream>

#include "save.h"


using namespace std;

//-----------
int main()
//-----------
{
	// int를 파일에 저장하려면 몇 바이트가 필요한가? - 글자로 쓴다면 +6 bytes
	int n;		// int의 크기는 c++표준 문서에 따르면 >= 2bytes
	cout << "이 시스템에서 int의 크기" << sizeof n << endl;

	cout << "int의 최솟값 - " << numeric_limits<int>::min() << endl;		// 파일에 기록한다면 11bytes++
	cout << "int의 최댓값 - " << numeric_limits<int>::max() << endl;		// 10bytes++
	

	// [문제] [1, 1'000]값을 갖는 int 1'000개를 파일 "int 천 개를 메모리 그대로"에 저장하라
	// int 1'000개는 contiguous하고 4000바이트를 write 함수로 기록하였다.
	array<int, 1'000> a{};		// int{}(생성자)를 1000번 호출

	iota(a.begin(), a.end(), 1);		// numeric안에 있는 배열안에 1씩 증가하면서 넣어주는 함수

	ofstream out{ "int 천 개를 메모리 그대로", ios::binary };	//RAII
	//out.write(reinterpret_cast<char*>(a.data()), sizeof(int) * a.size());		// 저수준입력(binary모드), 이보다 빠른 write는 없다.
																				// 정작 까보면 4'000바이트를 넘어간다.
																				// 이유는 엔터키가 두 공간을 차지하기 때문인데
																				// 엔터키는 LineFeed, carrageReturn 두 동작을 한다.

	out.write((char*)&a, sizeof(int) * a.size());								// 4'000바이트가 나온다.

	save("소스.cpp");
}