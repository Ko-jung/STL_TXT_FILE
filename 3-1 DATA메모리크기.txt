

============================================================
소스.cpp, 저장시간: 03/16/23 Thursday 16:08:19 
============================================================
//--------------------------------------------------------------------
// 2023년 1학기 STL 3월 2일 목78		화910 목78		(3주 1일)
// -------------------------------------------------------------------
// cmd창 맨위 우클릭->속성->레이아웃->창 크기 너비 80
//--------------------------------------------------------------------
// STACK에서 사용할 수 있는 수보다 더 많은 수의 자료형 다루기 - DATA, FREESTORE
//--------------------------------------------------------------------

#include <iostream>
#include <fstream>
#include <array>
#include <format>

#include "save.h"

using namespace std;

// DATA segment의 크기 2GB
//array<char, 100'000'000> c{ 'a' };					// DATA segment 100MB
//array<int, 600'000'000> n{ 'a' };						// DATA segment 2.4GB	<- 스택과 다르게 컴파일 단계에서 바로 터진다.
array<int, 100'000'000> n{ 'a' };						// DATA segment 400MB

//array<char, 2'000'000'000> a;							// 컴파일 되지만 바로 터진다
array<char, 1'800'000'000> a;							// 정상 작동
//array<char, 1'800'000'000> b;							// 두 개 같이 요구하면 터진다.
array<char, 800'000> b;							// 

//-----------
int main()
//-----------
{	
	{
		int i{  };
		for (char& num : a) {
			num = ++i;
		}
		// 뒤에서 100개만 출력
		auto p = a.rbegin();
		for (int i = 0; i < 100; i++) {
			cout << format("{:10}", *p++);
		}
	}
	{
		int i{  };
		for (char& num : b) {
			num = ++i;
		}
		// 뒤에서 100개만 출력
		auto p = b.rbegin();
		for (int i = 0; i < 100; i++) {
			cout << format("{:10}", *p++);
		}
	}
	cout << "문제없나?" << '\n';

	save("소스.cpp");
}