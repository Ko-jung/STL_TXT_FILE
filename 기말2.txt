//------------ 주 의 ------------
// namespace std를 사용하였다.
// include 문장을 답지에 적을 필요없다.
// 실행되지 않는 코드를 적으면 감점한다
// 답이 맞더라도 효율 낮은 코드나 알고리즘을 사용하지 않은 코드는 감점한다.
// 프로그램 환경 - Release/x64, 프로젝트 속성 - 미리 보기 - 최신 C++ 초안의 기능(/std:c++latest)

// e-class에서 시험.zip을 다운 받은 후 시작한다.

// 각 문제를 해결하는데 필요한 코드( 멤버함수 포함 )를 답지에 적는다.
// 화면 출력을 적으라는 문제는 출력된 내용을 답지에 적는다.

#include <iostream>
#include <algorithm>
#include <fstream>
#include <vector>
#include <string>
#include <numeric>
#include <format>
using namespace std;


class TEST {
	int num;
	//for_each(TEST(111), TEST(116), times10);
public:
	TEST(int a) : num(a) { }

	bool operator!=(const TEST& rhs) {
		return num != rhs.num;
	}
	int& operator++() {
		return ++num;
	}
	int& operator*() {
		return num;
	}
};


//---------
int main( )
//---------
{
	ifstream in{ "시험.txt" };

	vector<int> v;			// "시험.txt"를 여기에 저장한다


	// [문제 1] "시험.txt"를 읽어 v에 저장하고, v의 size()를 화면에 출력하라.
	// 답지에 저장하는 코드와 v의 size()값을 적어라.				(코드:15, 출력값:5)
	// (주의) v는 이미 생성되어있다.
	copy(istream_iterator<int>{in}, {}, back_inserter(v));
	cout << v.size() << endl;




	// [문제 2]	v에 저장된 int값의 평균을 화면에 출력하라.			(코드:15, 출력값:5)
	// (참고) format을 사용하고 {".3f"}를 사용하면 소숫점 3자리까지 출력할 수 있다
	long long sum = accumulate(v.begin(), v.end(), (long long)0);
	cout << std::format("{:.3f}", (double)sum / v.size()) << endl;



	// [문제 3] v에 저장된 int를 화면에 출력하면 값이 나온다.
	// int 값은 [0,9] 숫자로 표현된다.
	// v에 저장된 int중에서 각 숫자가 모두 홀수인 것은 몇 개인지  화면에 출력하라.
	//																(코드:35, 출력값:5)
	// (도움) to_string()으로 int를 string으로 변환할 수 있다.	
	// (예) 7153119    -> 이 int는 각 자리수가 모두 홀수이다
	// (예) 31233122   -> 이 int에는 짝수가 포함되어 있다.
	// (주의) int값은 음수도 존재한다.
	int cnt = count_if(v.begin(), v.end(), [](const int& a) {
		string s = to_string(abs(a));
		//cout << s << endl;
		return all_of(s.begin(), s.end(), [](const char& c) {
			//cout << (int)c % 2 << ' ';
			return ((int)c) % 2;
			});
		});
	cout << cnt << endl;



	// [참고] 다음 코드를 실행하면 vv의 원소값*10을 출력한다.
	vector<int> vv{ 1, 3, 5, 7, 9 };
	auto times10 = []( int& n ) { cout << n * 10 << " "; };
	for_each( vv.begin( ), vv.begin()+3, times10 );
	cout << endl;					// 출력 - 10 30 50


	// [문제 4] 다음 std::for_each 문장이 의도한대로 실행되도록 필요한 코딩을 추가하라.	(관련코드:40)
	// (주의) 주석을 제거하고 실행되도록 하라.


	for_each( TEST( 111 ), TEST( 116 ), times10 );
	cout << endl;					// 출력 - 1110 1120 1130 1140 1150

}