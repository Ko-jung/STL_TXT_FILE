

============================================================
소스.cpp, 저장시간: 04/04/23 Tuesday 19:06:00 
============================================================
//--------------------------------------------------------------------
// 2023년 1학기 STL 3월 2일 목78		화910 목78		(5주 2일)
//--------------------------------------------------------------------
// Sequence Container - array
//--------------------------------------------------------------------

#include <iostream>
#include <array>
#include <string>
#include <fstream>

#include "save.h"

void f(auto a) {

}

using namespace std;

//-----------
int main()
//-----------
{
	// array와 배열의 차이 : 배열은 *a로 decay가 가능하지만 array는 지원하지 않는다.
	// 
	// cout << typeid(array<int, 10>::value_type).name() << endl;		// array에 담고있는 변수의 타입을 묻는다.
	// 
	// array - Element access
	// .at(n) n번째가 array의 경계를 벗어났는지 확인하며 참조, 래퍼런스를 반환하기 때문에 = 1234 같은게 가능하다.
	// .data() array가 가지고 있는 메모리에 직접 접근
	//
	// array - Iterators
	// begin : begining을 가르키는 반복자를 리턴
	// 반복자는 노트 참고
	//
	// array - Capacity, operations, Non-member functions 등등
	// 점찍고 이용하는건 member function, 안찍어도 되는건 Non-member function

	array<int, 10> a{ 1,2,3,4,5,6,7,8,9,10 };		// 멤버 변수로 int[10]개가 생성된다.

	a.fill(123132);									// a를 채운다.


	// 전체 원소를 화면에 출력한다.
	int							n;
	array<int,10>::iterator		p = a.begin();

	// 1. for range 사용
	for (int d : a)
		cout << d << ' ';
	cout << endl;

	// 2. 일반적 for loop 사용
	// for (int i = 0; i < a.size(); i++) {
	// 	cout << a[i] << ' ';
	// }
	// cout << endl;

	// 3. iterator를 for문으로 사용하여 출력
	// for (auto i = a.begin(); i != a.end(); ++i) {
	// 	cout << *i << ' ';
	// }
	// cout << endl;

	// 4. iterator를 while문으로 사용하여 출력
	//	while (p != a.end()) {							// 어떤 자료구조가 와도 돌아간다.
	//		cout << p.operator*()/**p*/ << endl;
	//		p.operator++();								// ++p;
	//	}

	// 전체 원소를 역방향으로 화면에 출력한다.
	 for (auto i = a.rbegin(); i != a.rend(); ++i) {
	 	cout << *i << ' ';
	 }
	 cout << endl;

	 //파일 "소스.cpp"에서 단어 100개를 a로 읽어와라
	 array<string, 100> s;
	 ifstream in{ "소스.cpp" };

	 for (int i = 0; i < 100; i++)
		 in >> a[i];

	 for (std::string& str : s)
		 cout << str << endl;

	save("소스.cpp");
}